#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 

Show all columns of January sales table:
SELECT *
FROM BIT_DB.JanSales
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

#1. How many orders were placed in January? 
SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE length(orderid) = 6 
AND orderid <> 'Order ID';

#2. How many of those orders were for an iPhone? 
SELECT COUNT (orderID)
FROM BIT_DB.JanSales
WHERE Product = 'iPhone'
AND length(orderid) = 6
AND orderid <> 'Order ID';

#3. Select the customer account numbers for all the orders that were placed in February. 
SELECT DISTINCT acctnum
FROM BIT_DB.customers cust
INNER JOIN BIT_DB.FebSales Feb
ON cust.order_id = Feb.orderid
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

#4. Which product was the cheapest one sold in January, and what was the price? 
SELECT MIN(price), Product
FROM BIT_DB.JanSales
GROUP BY Product
ORDER BY min(price) ASC
LIMIT 1;

OR

SELECT DISTINCT Product, Price
FROM BIT_DB.JanSales
ORDER BY price ASC
LIMIT 1;

#5. What is the total revenue for each product sold in January?
SELECT Product, SUM(Quantity*price) AS revenue
FROM BIT_DB.JanSales
GROUP BY Product;

#6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT Product, sum(quantity), sum(quantity)*price AS revenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY Product;

#7. How many customers ordered more than 2 products at a time, and what was the average amount spent for those customers? 
SELECT COUNT(DISTINCT acctnum), AVG(quantity*price) AS average_revenue
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers customers
ON customers.order_id = Feb.orderID
WHERE quantity > 2
AND length(orderid) = 6
AND orderid <> 'Order ID';

#8. List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT Product, SUM(Quantity)
FROM BIT_DB.FebSales
WHERE location LIKE '%Los Angeles%'
GROUP BY Product

#9. Which locations in New York received at least 3 orders in January, and how many orders did they each receive?
SELECT distinct location, count(orderID)
FROM BIT_DB.JanSales
WHERE location LIKE'%New York%'
AND length (orderID) = 6
AND orderID <> 'Order ID'
GROUP BY location
HAVING count(orderID)>=3

#10. How many of each type of headphone were sold in February?
SELECT Product, SUM(Quantity) AS quantity
FROM BIT_DB.FebSales
WHERE Product LIKE '%headphone%'
GROUP BY Product

#11. What was the average amount spent per account in February?
SELECT SUM(Quantity*price)/COUNT(acctnum)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers customer
ON Feb.orderID = customer.order_id
WHERE length (orderID) = 6
AND orderID <> 'Order ID'

#12. What was the average quantity of products purchased per account in February? 
SELECT SUM(Quantity)/COUNT(acctnum)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers customer
ON Feb.orderID = customer.order_ID
WHERE length (orderID) = 6
AND orderID <> 'Order ID'

#13. Which product brought in the most revenue in January and how much revenue did it bring in total?
SELECT Product, SUM(Quantity*price) as revenue
FROM BIT_DB.JanSales
GROUP BY Product
ORDER BY revenue DESC
LIMIT 1

